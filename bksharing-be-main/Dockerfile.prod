## Build dist
FROM node:18 AS builder
WORKDIR /usr/src/app

COPY package.json yarn.lock  ./

RUN yarn install --frozen-lockfile 

COPY ./src ./src 
COPY ./prisma ./prisma
COPY ./nest-cli.json ./
COPY ./tsconfig.build.json ./
COPY ./tsconfig.json ./
COPY ./.env ./ 

RUN yarn build 

## Build node_modules
FROM node:18-slim AS node_modules
RUN apt-get update -y && apt-get install -y openssl
WORKDIR /usr/src/app

COPY package.json yarn.lock ./
COPY ./prisma ./prisma

RUN npx prisma generate
RUN yarn install --production --frozen-lockfile 

## Build final image
FROM node:18-slim
RUN apt update && apt install libssl-dev dumb-init -y --no-install-recommends
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

COPY  --from=builder /usr/src/app/dist ./dist
COPY  --from=builder /usr/src/app/.env .env
COPY  --from=builder /usr/src/app/package.json .
COPY  --from=builder /usr/src/app/yarn.lock .
COPY  --from=node_modules /usr/src/app/node_modules ./node_modules


# Copy the entrypoint script
COPY entrypoint.sh /usr/src/app/entrypoint.sh
COPY ./prisma ./prisma

# Make entrypoint.sh executable
RUN chmod +x /usr/src/app/entrypoint.sh

ENV NODE_ENV production
EXPOSE 8080

# Set the entrypoint to the script that runs prisma db push and starts the app
ENTRYPOINT ["/usr/src/app/entrypoint.sh"]

# CMD ["dumb-init", "node", "usr/src/main"]
CMD ["dumb-init", "node", "dist/main"]
# CMD ["yarn", "run", "start"]
