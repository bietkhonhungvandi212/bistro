## Build dist
FROM node:18 AS builder
WORKDIR /usr/src/app

COPY package.json yarn.lock  ./

RUN yarn install --frozen-lockfile 

COPY ./src ./src 
COPY ./prisma ./prisma
COPY ./nest-cli.json ./
COPY ./tsconfig.build.json ./
COPY ./tsconfig.json ./

RUN yarn build 

## Build node_modules
FROM node:18-slim AS node_modules
RUN apt-get update -y && apt-get install -y openssl
WORKDIR /usr/src/app

COPY package.json yarn.lock ./
COPY ./prisma ./prisma

RUN npx prisma generate
RUN yarn install --production --frozen-lockfile 


## Build final image
FROM node:18-slim
RUN apt update && apt install libssl-dev dumb-init -y --no-install-recommends
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

COPY  --from=builder /usr/src/app/dist ./dist
COPY  --from=builder /usr/src/app/package.json .
COPY  --from=builder /usr/src/app/yarn.lock .
COPY  --from=node_modules /usr/src/app/node_modules ./node_modules

# Copy the entrypoint script
COPY entrypoint.sh /usr/src/app/entrypoint.sh
COPY ./prisma ./prisma

# Make entrypoint.sh executable
RUN chmod +x /usr/src/app/entrypoint.sh

# Accept build arguments for environment variables
ARG NODE_ENV
ARG PORT
ARG HOST
ARG API_VERSION
ARG ORIGIN
ARG APP_SECRET
ARG DATABASE_URL
ARG POSTGRES_USER
ARG POSTGRES_PASSWORD
ARG POSTGRES_DB
ARG JWT_SECRET_KEY
ARG JWT_ACCESS_TOKEN_EXPIRE_HOURS
ARG CLD_CLOUD_NAME
ARG CLD_API_KEY
ARG CLD_API_SECRET
ARG GETSTREAM_API_KEY
ARG GETSTREAM_API_SECRET

# Set environment variables
ENV NODE_ENV=${NODE_ENV}
ENV PORT=${PORT}
ENV HOST=${HOST}
ENV API_VERSION=${API_VERSION}
ENV ORIGIN=${ORIGIN}
ENV APP_SECRET=${APP_SECRET}
ENV DATABASE_URL=${DATABASE_URL}
ENV POSTGRES_USER=${POSTGRES_USER}
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
ENV POSTGRES_DB=${POSTGRES_DB}
ENV JWT_SECRET_KEY=${JWT_SECRET_KEY}
ENV JWT_ACCESS_TOKEN_EXPIRE_HOURS=${JWT_ACCESS_TOKEN_EXPIRE_HOURS}
ENV CLD_CLOUD_NAME=${CLD_CLOUD_NAME}
ENV CLD_API_KEY=${CLD_API_KEY}
ENV CLD_API_SECRET=${CLD_API_SECRET}
ENV GETSTREAM_API_KEY=${GETSTREAM_API_KEY}
ENV GETSTREAM_API_SECRET=${GETSTREAM_API_SECRET}

EXPOSE 8080

# Set the entrypoint to the script that runs prisma db push and starts the app
ENTRYPOINT ["/usr/src/app/entrypoint.sh"]

CMD ["dumb-init", "node", "dist/main"]
